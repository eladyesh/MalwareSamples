import os
import win32security
import ntsecuritycon
import pywintypes
import win32api
from pywin32_system32 import *

def main():
    filename = input("Enter the filename to make unexecutable: ")
    try:
        # Set the file as read-only
        os.chmod(filename, 0o444)

        # Remove the "execute" permission for all users
        security_descriptor = win32security.GetFileSecurity(filename, win32security.DACL_SECURITY_INFORMATION)
        dacl = security_descriptor.GetSecurityDescriptorDacl()
        if dacl is None:
            # Create a new DACL if one doesn't exist
            dacl = win32security.ACL()
        else:
            # Remove any existing ACEs that grant permissions to the "Everyone" group
            for i in range(dacl.GetAceCount()):
                ace = dacl.GetAce(i)
                trustee = ace[2]
                if trustee == 'Everyone':
                    dacl.DeleteAce(i)
                    break
        # Add a new access-denied ACE that denies the "execute" permission for all users
        everyone_sid, domain_name, sid_type = win32security.ConvertStringSidToSid("S-1-1-0")
        dacl.AddAccessDeniedAce(ntsecuritycon.FILE_GENERIC_EXECUTE | ntsecuritycon.FILE_EXECUTE | ntsecuritycon.FILE_READ_ATTRIBUTES, everyone_sid)
        # Set the modified DACL back to the security descriptor
        security_descriptor.SetSecurityDescriptorDacl(1, dacl, 0)
        # Set the modified security descriptor back to the file
        win32security.SetFileSecurity(filename, win32security.DACL_SECURITY_INFORMATION, security_descriptor)

        print(f"File {filename} is now unexecutable.")
    except Exception as e:
        print(f"Error: {e}")

if __name__ == '__main__':
    main()
